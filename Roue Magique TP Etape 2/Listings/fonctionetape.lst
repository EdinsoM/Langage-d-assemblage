


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********************
    2 00000000                 THUMB
    3 00000000                 REQUIRE8
    4 00000000                 PRESERVE8
    5 00000000         
    6 00000000         ;*******************************************************
                       *******************
    7 00000000         ; Fichier Vierge.asm
    8 00000000         ; Auteur : V.MAHOUT
    9 00000000         ; Date :  12/11/2013
   10 00000000         ;*******************************************************
                       *******************
   11 00000000         
   12 00000000         ;***************IMPORT/EXPORT***************************
                       *******************
   13 00000000         
   14 00000000                 IMPORT           Barrette1
   15 00000000                 IMPORT           Barrette2
   16 00000000                 IMPORT           DataSend
   17 00000000         
   18 00000000                 EXPORT           DriverGlobal
   19 00000000                 EXPORT           DriverReg
   20 00000000                 EXPORT           DriverPile
   21 00000000                 EXPORT           Tempo
   22 00000000                 EXPORT           SetSCLK
   23 00000000                 EXPORT           ResetSCLK
   24 00000000                 EXPORT           SetSin
   25 00000000                 EXPORT           ResetSin
   26 00000000         
   27 00000000         
   28 00000000         ;*******************************************************
                       *******************
   29 00000000         
   30 00000000         
   31 00000000         ;***************CONSTANTES******************************
                       *******************
   32 00000000         
   33 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/



ARM Macro Assembler    Page 2 


   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 
                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 



ARM Macro Assembler    Page 3 


                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   34 00000000         
   35 00000000         ;*******************************************************
                       *******************
   36 00000000         
   37 00000000         
   38 00000000         ;***************VARIABLES*******************************
                       *******************
   39 00000000                 AREA             MesDonnees, data, readwrite
   40 00000000         ;*******************************************************
                       *******************
   41 00000000         
   42 00000000 00000000 
                       Valcourante
                               DCD              0
   43 00000004         
   44 00000004         
   45 00000004         ;*******************************************************
                       *******************
   46 00000004         
   47 00000004         
   48 00000004         
   49 00000004         ;***************CODE************************************
                       *******************
   50 00000004                 AREA             moncode, code, readonly
   51 00000000         ;*******************************************************
                       *******************
   52 00000000         
   53 00000000         
   54 00000000         ;#######################################################
                       #################
   55 00000000         ; Procédure DriverGlobal
   56 00000000         ;#######################################################
                       #################
   57 00000000         ; Paramètre entrant  : //
   58 00000000         ; Paramètre sortant  : //
   59 00000000         ; Variables globales : DataSend, Barrette1, Valcourante
   60 00000000         ; Registres modifiés : de R1 à R5 et LR (car appel imbri
                       qué)
   61 00000000         ;-------------------------------------------------------
                       -----------------
   62 00000000         
   63 00000000         ; R0 --> Barrette1
   64 00000000         ; R1 --> NbLed
   65 00000000         ; R2 --> NbBit
   66 00000000         ; R3 --> ValCourante
   67 00000000         ; R5 --> DataSend
   68 00000000         
   69 00000000         DriverGlobal
                               PROC



ARM Macro Assembler    Page 4 


   70 00000000         
   71 00000000 B53F            PUSH             {R0-R5, LR}
   72 00000002         
   73 00000002 485B            LDR              R0, =Barrette1
   74 00000004 4B5B            LDR              R3, =Valcourante
   75 00000006 F7FF FFFE       BL               SetSCLK
   76 0000000A         
   77 0000000A F04F 0100       MOV              R1, #0      ; NbLed = 0
   78 0000000E         
   79 0000000E         Pour
   80 0000000E 2930            CMP              R1, #48     ; on passe 47 fois 
                                                            et on sort à la 48è
                                                            me
   81 00000010 D01A            BEQ              FinPour
   82 00000012         
   83 00000012         
   84 00000012 5C43            LDRB             R3,[R0,R1]
   85 00000014 EA4F 6303       LSL              R3, #24
   86 00000018         
   87 00000018 F04F 0200       MOV              R2, #0      ; NbBit = 0
   88 0000001C         
   89 0000001C         AutrePour
   90 0000001C         
   91 0000001C 2A0C            CMP              R2, #12     ; de même, on passe
                                                             11 fois et on sort
                                                             à la 12eme
   92 0000001E D010            BEQ              FinAutrePour
   93 00000020         
   94 00000020 F7FF FFFE       BL               ResetSCLK
   95 00000024         
   96 00000024 F013 4400       ANDS             R4, R3, #0x80000000 ; on compar
                                                            e le bit de PF de R
                                                            3 (Valcourante) ave
                                                            c 0
   97 00000028         
   98 00000028 D002            BEQ              Sinon       ; si il est 0, on f
                                                            ait Sinon
   99 0000002A F7FF FFFE       BL               SetSin      ; sinon on allume S
                                                            etSin
  100 0000002E E001            B                FinSi
  101 00000030         
  102 00000030         Sinon
  103 00000030 F7FF FFFE       BL               ResetSin
  104 00000034         
  105 00000034         FinSi
  106 00000034 EA4F 0343       LSL              R3, #1      ; on positionne Val
                                                            Courante au bit sui
                                                            vant
  107 00000038 F7FF FFFE       BL               SetSCLK
  108 0000003C         
  109 0000003C F102 0201       ADD              R2, #1      ; NbBit+1
  110 00000040 E7EC            B                AutrePour
  111 00000042         
  112 00000042         FinAutrePour
  113 00000042 F101 0101       ADD              R1, #1      ;NbLed+1
  114 00000046 E7E2            B                Pour
  115 00000048         
  116 00000048         FinPour
  117 00000048         



ARM Macro Assembler    Page 5 


  118 00000048         ; Les deux boucles sont terminées 
  119 00000048         
  120 00000048 F04F 0500       MOV              R5, #0      ;DataSend = 0 à cha
                                                            que envoi de donnée
                                                             
  121 0000004C 494A            LDR              R1, =DataSend
  122 0000004E 7029            STRB             R1, [R5]
  123 00000050         
  124 00000050 E8BD 403F       POP              {R0-R5, LR}
  125 00000054         
  126 00000054 4770            BX               LR
  127 00000056         
  128 00000056                 ENDP
  129 00000056         
  130 00000056         
  131 00000056         
  132 00000056         ;#######################################################
                       #################
  133 00000056         ; Procédure DriverReg
  134 00000056         ;#######################################################
                       #################
  135 00000056         ; Paramètre entrant  : Barrette1 dans R0
  136 00000056         ; Paramètre sortant  : Barrette1 dans R0
  137 00000056         ; Variables globales : DataSend
  138 00000056         ; Registres modifiés : de R1 à R4 et LR
  139 00000056         ;-------------------------------------------------------
                       -----------------
  140 00000056         
  141 00000056         ; R0 --> Barrette1
  142 00000056         ; R1 --> NbLED
  143 00000056         ; R2 --> NbBit
  144 00000056         ; R3 --> ValCourante
  145 00000056         
  146 00000056         ; R5 --> DataSend 
  147 00000056         
  148 00000056         ; Procédure identique à DriverGlobal mais en passant Bar
                       rette1 par référence dans un registre
  149 00000056         DriverReg
                               PROC
  150 00000056         
  151 00000056 B53E            PUSH             {R1-R5, LR}
  152 00000058         
  153 00000058 F04F 0100       MOV              R1, #0      ;NbLED
  154 0000005C 4B45            LDR              R3, =Valcourante
  155 0000005E F7FF FFFE       BL               SetSCLK
  156 00000062         
  157 00000062         PourReg
  158 00000062 2930            CMP              R1, #48
  159 00000064 D01A            BEQ              FinPourReg
  160 00000066         
  161 00000066         
  162 00000066         FairePourReg
  163 00000066 5C43            LDRB             R3,[R0,R1]
  164 00000068 EA4F 6303       LSL              R3, #24
  165 0000006C         
  166 0000006C F04F 0200       MOV              R2, #0
  167 00000070         
  168 00000070         AutrePourReg
  169 00000070 2A0C            CMP              R2, #12



ARM Macro Assembler    Page 6 


  170 00000072 D010            BEQ              FinAutrePourReg
  171 00000074         
  172 00000074 F7FF FFFE       BL               ResetSCLK
  173 00000078         
  174 00000078 F013 4400       ANDS             R4, R3, #0x80000000
  175 0000007C D002            BEQ              SinonReg
  176 0000007E F7FF FFFE       BL               SetSin
  177 00000082 E001            B                FinSiReg
  178 00000084         
  179 00000084         SinonReg
  180 00000084 F7FF FFFE       BL               ResetSin
  181 00000088         
  182 00000088         FinSiReg
  183 00000088 EA4F 0343       LSL              R3, #1      ; on positionne Val
                                                            Courante au bit sui
                                                            vant
  184 0000008C F7FF FFFE       BL               SetSCLK
  185 00000090         
  186 00000090 F102 0201       ADD              R2, #1
  187 00000094 E7EC            B                AutrePourReg
  188 00000096         
  189 00000096         FinAutrePourReg
  190 00000096 F101 0101       ADD              R1, #1
  191 0000009A E7E2            B                PourReg
  192 0000009C         
  193 0000009C         FinPourReg
  194 0000009C         
  195 0000009C         ; Les deux boucles sont terminées 
  196 0000009C         
  197 0000009C F04F 0500       MOV              R5, #0      ;DataSend = 0 à cha
                                                            que envoi de donnée
                                                             
  198 000000A0 4935            LDR              R1, =DataSend
  199 000000A2 7029            STRB             R1, [R5]
  200 000000A4         
  201 000000A4 E8BD 403E       POP              {R1-R5, LR}
  202 000000A8         
  203 000000A8 4770            BX               LR
  204 000000AA         
  205 000000AA                 ENDP
  206 000000AA         
  207 000000AA         
  208 000000AA         ;#######################################################
                       #################
  209 000000AA         ; Procédure DriverPile
  210 000000AA         ;#######################################################
                       #################
  211 000000AA         ; Paramètre entrant  : Barrette1 sur la pile système
  212 000000AA         ; Paramètre sortant  : Barrette1 sur la pile système
  213 000000AA         ; Variables globales : DataSend
  214 000000AA         ; Registres modifiés : R1 - R4 et LR
  215 000000AA         ;-------------------------------------------------------
                       -----------------
  216 000000AA         
  217 000000AA         
  218 000000AA         ; R0 --> Barrette1
  219 000000AA         ; R1 --> NbLed
  220 000000AA         ; R2 --> NbBit
  221 000000AA         ; R3 --> ValCourante



ARM Macro Assembler    Page 7 


  222 000000AA         ; R5 --> DataSend
  223 000000AA         
  224 000000AA         ; Procédure identique à DriverGlobal mais en passant Bar
                       rette1 
  225 000000AA         DriverPile
                               PROC
  226 000000AA         
  227 000000AA F84D AD04       PUSH             {R10}
  228 000000AE 46EA            MOV              R10, SP
  229 000000B0         
  230 000000B0 B51E            PUSH             {LR,R1-R4}
  231 000000B2         
  232 000000B2         
  233 000000B2 F04F 0100       MOV              R1, #0
  234 000000B6 4B2F            LDR              R3, =Valcourante
  235 000000B8 F7FF FFFE       BL               SetSCLK
  236 000000BC F8DA 0004       LDR              R0, [R10, #4] ;on rajoute 4o po
                                                            ur récupérer l'adre
                                                            sse de la barrette 
                                                            pushée
  237 000000C0         
  238 000000C0         PourPile
  239 000000C0 2930            CMP              R1, #48
  240 000000C2 D01A            BEQ              FinPourPile
  241 000000C4         
  242 000000C4         
  243 000000C4 5C43            LDRB             R3,[R0,R1]
  244 000000C6 EA4F 6303       LSL              R3, #24
  245 000000CA         
  246 000000CA F04F 0200       MOV              R2, #0
  247 000000CE         
  248 000000CE         AutrePourPile
  249 000000CE 2A0C            CMP              R2, #12
  250 000000D0 D010            BEQ              FinAutrePourPile
  251 000000D2         
  252 000000D2 F7FF FFFE       BL               ResetSCLK
  253 000000D6         
  254 000000D6 F013 4400       ANDS             R4, R3, #0x80000000
  255 000000DA D102            BNE              SinonPile
  256 000000DC F7FF FFFE       BL               SetSin
  257 000000E0 E001            B                FinSiPile
  258 000000E2         
  259 000000E2         SinonPile
  260 000000E2 F7FF FFFE       BL               ResetSin
  261 000000E6         
  262 000000E6         FinSiPile
  263 000000E6 EA4F 0343       LSL              R3, #1      ; on positionne Val
                                                            Courante au bit sui
                                                            vant
  264 000000EA F7FF FFFE       BL               SetSCLK
  265 000000EE         
  266 000000EE F102 0201       ADD              R2, #1
  267 000000F2 E7EC            B                AutrePourPile
  268 000000F4         
  269 000000F4         FinAutrePourPile
  270 000000F4 F101 0101       ADD              R1, #1      ;NbLed+1
  271 000000F8 E7E2            B                PourPile
  272 000000FA         
  273 000000FA         FinPourPile



ARM Macro Assembler    Page 8 


  274 000000FA         
  275 000000FA         ; Les deux boucles sont terminées 
  276 000000FA         
  277 000000FA F04F 0100       MOV              R1, #0      ;DataSend = 0 à cha
                                                            que envoi de donnée
                                                             
  278 000000FE 4A1E            LDR              R2, =DataSend
  279 00000100 7011            STRB             R1, [R2]
  280 00000102         
  281 00000102 E8BD 401E       POP              {LR, R1-R4}
  282 00000106 F85D AB04       POP{R10}
  283 0000010A         
  284 0000010A 4770            BX               LR
  285 0000010C         
  286 0000010C                 ENDP
  287 0000010C         
  288 0000010C         
  289 0000010C         
  290 0000010C         ;#######################################################
                       #################
  291 0000010C         ; Procédure de gestion des LEDs 
  292 0000010C         ;#######################################################
                       #################
  293 0000010C         ; Paramètre entrant  : 
  294 0000010C         ; Paramètre sortant  : 
  295 0000010C         ; Variables globales : 
  296 0000010C         ; Registres modifiés : 
  297 0000010C         ;-------------------------------------------------------
                       -----------------
  298 0000010C         
  299 0000010C         
  300 0000010C         
  301 0000010C         SetSin  PROC
  302 0000010C B40C            PUSH             {R2,R3}
  303 0000010E 4A1B            LDR              R2, =GPIOBASEA+OffsetSet
  304 00000110 F04F 0380       MOV              R3, #(0x01<<7)
  305 00000114 8013            STRH             R3, [R2]
  306 00000116 BC0C            POP              {R2,R3}
  307 00000118 4770            BX               LR
  308 0000011A                 ENDP
  309 0000011A         
  310 0000011A         ResetSin
                               PROC
  311 0000011A B40C            PUSH             {R2,R3}
  312 0000011C 4A18            LDR              R2, =GPIOBASEA+OffsetReset
  313 0000011E F04F 0380       MOV              R3, #(0x01<<7)
  314 00000122 8013            STRH             R3, [R2]
  315 00000124 BC0C            POP              {R2,R3}
  316 00000126 4770            BX               LR
  317 00000128                 ENDP
  318 00000128         
  319 00000128         SetSCLK PROC
  320 00000128 B40C            PUSH             {R2,R3}
  321 0000012A 4A14            LDR              R2, =GPIOBASEA+OffsetSet
  322 0000012C F04F 0320       MOV              R3, #(0x01<<5)
  323 00000130 8013            STRH             R3, [R2]
  324 00000132 BC0C            POP              {R2,R3}
  325 00000134 4770            BX               LR
  326 00000136         



ARM Macro Assembler    Page 9 


  327 00000136                 ENDP
  328 00000136         
  329 00000136         ResetSCLK
                               PROC
  330 00000136 B40C            PUSH             {R2, R3}
  331 00000138 4A11            LDR              R2, =GPIOBASEA+OffsetReset
  332 0000013A F04F 0320       MOV              R3, #(0x01<<5)
  333 0000013E 8013            STRH             R3, [R2]
  334 00000140 BC0C            POP              {R2, R3}
  335 00000142 4770            BX               LR
  336 00000144         
  337 00000144                 ENDP
  338 00000144         
  339 00000144         
  340 00000144         ;#######################################################
                       #################
  341 00000144         ; Procédure Tempo
  342 00000144         ;#######################################################
                       #################
  343 00000144         ; Paramètre entrant  : R0
  344 00000144         ; Paramètre sortant  : R0
  345 00000144         ; Variables globales : // 
  346 00000144         ; Registres modifiés : de R1 à R8 et LR
  347 00000144         ;-------------------------------------------------------
                       -----------------
  348 00000144         
  349 00000144         Tempo   PROC
  350 00000144         
  351 00000144 B40E            PUSH             {R1-R3}
  352 00000146 F04F 0100       MOV              R1, #0
  353 0000014A F04F 030A       MOV              R3, #10     ; 
  354 0000014E FB03 F300       MUL              R3,R3,R0    ; R0 contient N = N
                                                            ombre d'itérations
  355 00000152         
  356 00000152         
  357 00000152 4299    For1    CMP              R1, R3
  358 00000154 D00A            BEQ              Fin1
  359 00000156 F44F 72FA       MOV              R2, #500    ; qui correspond à 
                                                            0,1 ms (chaque itér
                                                            ation de la boucle 
                                                            For1 dure environ 8
                                                            3 ns) 
  360 0000015A         
  361 0000015A 2A00    For2    CMP              R2, #0
  362 0000015C D003            BEQ              Fin2
  363 0000015E BF00            NOP
  364 00000160 F1A2 0201       SUB              R2, #1
  365 00000164 E7F9            B                For2
  366 00000166         
  367 00000166 F101 0101 
                       Fin2    ADD              R1, #1
  368 0000016A E7F2            B                For1
  369 0000016C         
  370 0000016C         Fin1
  371 0000016C BC0A            POP              {R1, R3}
  372 0000016E 4770            BX               LR
  373 00000170                 ENDP
  374 00000170         
  375 00000170         



ARM Macro Assembler    Page 10 


  376 00000170         
  377 00000170         
  378 00000170         
  379 00000170         ;*******************************************************
                       *******************
  380 00000170                 END
              00000000 
              00000000 
              00000000 
              40010810 
              40010814 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\fonctionetape.d -o.\objects\fonctionetape.o -I.\RTE\Devi
ce\STM32F103RB -I.\RTE\_Simul_ -IC:\Users\emarina\AppData\Local\Arm\Packs\ARM\C
MSIS\5.6.0\CMSIS\Core\Include -IC:\Users\emarina\AppData\Local\Arm\Packs\Keil\S
TM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MI
CROLIB SETA 1" --predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA
 1" --predefine="STM32F10X_MD SETA 1" --predefine="STM32F10X_MD SETA 1" --list=
.\listings\fonctionetape.lst FonctionEtape.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MesDonnees 00000000

Symbol: MesDonnees
   Definitions
      At line 39 in file FonctionEtape.asm
   Uses
      None
Comment: MesDonnees unused
Valcourante 00000000

Symbol: Valcourante
   Definitions
      At line 42 in file FonctionEtape.asm
   Uses
      At line 74 in file FonctionEtape.asm
      At line 154 in file FonctionEtape.asm
      At line 234 in file FonctionEtape.asm

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AutrePour 0000001C

Symbol: AutrePour
   Definitions
      At line 89 in file FonctionEtape.asm
   Uses
      At line 110 in file FonctionEtape.asm
Comment: AutrePour used once
AutrePourPile 000000CE

Symbol: AutrePourPile
   Definitions
      At line 248 in file FonctionEtape.asm
   Uses
      At line 267 in file FonctionEtape.asm
Comment: AutrePourPile used once
AutrePourReg 00000070

Symbol: AutrePourReg
   Definitions
      At line 168 in file FonctionEtape.asm
   Uses
      At line 187 in file FonctionEtape.asm
Comment: AutrePourReg used once
DriverGlobal 00000000

Symbol: DriverGlobal
   Definitions
      At line 69 in file FonctionEtape.asm
   Uses
      At line 18 in file FonctionEtape.asm
Comment: DriverGlobal used once
DriverPile 000000AA

Symbol: DriverPile
   Definitions
      At line 225 in file FonctionEtape.asm
   Uses
      At line 20 in file FonctionEtape.asm
Comment: DriverPile used once
DriverReg 00000056

Symbol: DriverReg
   Definitions
      At line 149 in file FonctionEtape.asm
   Uses
      At line 19 in file FonctionEtape.asm
Comment: DriverReg used once
FairePourReg 00000066

Symbol: FairePourReg
   Definitions
      At line 162 in file FonctionEtape.asm
   Uses
      None
Comment: FairePourReg unused
Fin1 0000016C

Symbol: Fin1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 370 in file FonctionEtape.asm
   Uses
      At line 358 in file FonctionEtape.asm
Comment: Fin1 used once
Fin2 00000166

Symbol: Fin2
   Definitions
      At line 367 in file FonctionEtape.asm
   Uses
      At line 362 in file FonctionEtape.asm
Comment: Fin2 used once
FinAutrePour 00000042

Symbol: FinAutrePour
   Definitions
      At line 112 in file FonctionEtape.asm
   Uses
      At line 92 in file FonctionEtape.asm
Comment: FinAutrePour used once
FinAutrePourPile 000000F4

Symbol: FinAutrePourPile
   Definitions
      At line 269 in file FonctionEtape.asm
   Uses
      At line 250 in file FonctionEtape.asm
Comment: FinAutrePourPile used once
FinAutrePourReg 00000096

Symbol: FinAutrePourReg
   Definitions
      At line 189 in file FonctionEtape.asm
   Uses
      At line 170 in file FonctionEtape.asm
Comment: FinAutrePourReg used once
FinPour 00000048

Symbol: FinPour
   Definitions
      At line 116 in file FonctionEtape.asm
   Uses
      At line 81 in file FonctionEtape.asm
Comment: FinPour used once
FinPourPile 000000FA

Symbol: FinPourPile
   Definitions
      At line 273 in file FonctionEtape.asm
   Uses
      At line 240 in file FonctionEtape.asm
Comment: FinPourPile used once
FinPourReg 0000009C

Symbol: FinPourReg
   Definitions
      At line 193 in file FonctionEtape.asm
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 159 in file FonctionEtape.asm
Comment: FinPourReg used once
FinSi 00000034

Symbol: FinSi
   Definitions
      At line 105 in file FonctionEtape.asm
   Uses
      At line 100 in file FonctionEtape.asm
Comment: FinSi used once
FinSiPile 000000E6

Symbol: FinSiPile
   Definitions
      At line 262 in file FonctionEtape.asm
   Uses
      At line 257 in file FonctionEtape.asm
Comment: FinSiPile used once
FinSiReg 00000088

Symbol: FinSiReg
   Definitions
      At line 182 in file FonctionEtape.asm
   Uses
      At line 177 in file FonctionEtape.asm
Comment: FinSiReg used once
For1 00000152

Symbol: For1
   Definitions
      At line 357 in file FonctionEtape.asm
   Uses
      At line 368 in file FonctionEtape.asm
Comment: For1 used once
For2 0000015A

Symbol: For2
   Definitions
      At line 361 in file FonctionEtape.asm
   Uses
      At line 365 in file FonctionEtape.asm
Comment: For2 used once
Pour 0000000E

Symbol: Pour
   Definitions
      At line 79 in file FonctionEtape.asm
   Uses
      At line 114 in file FonctionEtape.asm
Comment: Pour used once
PourPile 000000C0

Symbol: PourPile
   Definitions
      At line 238 in file FonctionEtape.asm
   Uses
      At line 271 in file FonctionEtape.asm
Comment: PourPile used once
PourReg 00000062



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: PourReg
   Definitions
      At line 157 in file FonctionEtape.asm
   Uses
      At line 191 in file FonctionEtape.asm
Comment: PourReg used once
ResetSCLK 00000136

Symbol: ResetSCLK
   Definitions
      At line 329 in file FonctionEtape.asm
   Uses
      At line 23 in file FonctionEtape.asm
      At line 94 in file FonctionEtape.asm
      At line 172 in file FonctionEtape.asm
      At line 252 in file FonctionEtape.asm

ResetSin 0000011A

Symbol: ResetSin
   Definitions
      At line 310 in file FonctionEtape.asm
   Uses
      At line 25 in file FonctionEtape.asm
      At line 103 in file FonctionEtape.asm
      At line 180 in file FonctionEtape.asm
      At line 260 in file FonctionEtape.asm

SetSCLK 00000128

Symbol: SetSCLK
   Definitions
      At line 319 in file FonctionEtape.asm
   Uses
      At line 22 in file FonctionEtape.asm
      At line 75 in file FonctionEtape.asm
      At line 107 in file FonctionEtape.asm
      At line 155 in file FonctionEtape.asm
      At line 184 in file FonctionEtape.asm
      At line 235 in file FonctionEtape.asm
      At line 264 in file FonctionEtape.asm

SetSin 0000010C

Symbol: SetSin
   Definitions
      At line 301 in file FonctionEtape.asm
   Uses
      At line 24 in file FonctionEtape.asm
      At line 99 in file FonctionEtape.asm
      At line 176 in file FonctionEtape.asm
      At line 256 in file FonctionEtape.asm

Sinon 00000030

Symbol: Sinon
   Definitions
      At line 102 in file FonctionEtape.asm



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 98 in file FonctionEtape.asm
Comment: Sinon used once
SinonPile 000000E2

Symbol: SinonPile
   Definitions
      At line 259 in file FonctionEtape.asm
   Uses
      At line 255 in file FonctionEtape.asm
Comment: SinonPile used once
SinonReg 00000084

Symbol: SinonReg
   Definitions
      At line 179 in file FonctionEtape.asm
   Uses
      At line 175 in file FonctionEtape.asm
Comment: SinonReg used once
Tempo 00000144

Symbol: Tempo
   Definitions
      At line 349 in file FonctionEtape.asm
   Uses
      At line 21 in file FonctionEtape.asm
Comment: Tempo used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 50 in file FonctionEtape.asm
   Uses
      None
Comment: moncode unused
32 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      At line 303 in file FonctionEtape.asm
      At line 312 in file FonctionEtape.asm
      At line 321 in file FonctionEtape.asm
      At line 331 in file FonctionEtape.asm

GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEB unused
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

MaskSerial_In1 00000080

Symbol: MaskSerial_In1
   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetInput unused
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      At line 312 in file FonctionEtape.asm
      At line 331 in file FonctionEtape.asm

OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses
      At line 303 in file FonctionEtape.asm
      At line 321 in file FonctionEtape.asm

SCB_VTOR E000ED08



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Barrette1 00000000

Symbol: Barrette1
   Definitions
      At line 14 in file FonctionEtape.asm
   Uses
      At line 73 in file FonctionEtape.asm
Comment: Barrette1 used once
Barrette2 00000000

Symbol: Barrette2
   Definitions
      At line 15 in file FonctionEtape.asm
   Uses
      None
Comment: Barrette2 unused
DataSend 00000000

Symbol: DataSend
   Definitions
      At line 16 in file FonctionEtape.asm
   Uses
      At line 121 in file FonctionEtape.asm
      At line 198 in file FonctionEtape.asm
      At line 278 in file FonctionEtape.asm

3 symbols
393 symbols in table
