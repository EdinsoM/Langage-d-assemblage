


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ;*******************************************************
                       *****************
    4 00000000                 THUMB
    5 00000000                 REQUIRE8
    6 00000000                 PRESERVE8
    7 00000000         ;*******************************************************
                       *****************
    8 00000000         
    9 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 



ARM Macro Assembler    Page 2 


                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   10 00000000         
   11 00000000         
   12 00000000         ;*******************************************************
                       *****************
   13 00000000         ;      IMPORT/EXPORT Système
   14 00000000         ;*******************************************************
                       *****************
   15 00000000         
   16 00000000                 IMPORT           ||Lib$$Request$$armlib|| [CODE,
WEAK]
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         ; IMPORT/EXPORT de procédure           
   22 00000000         
   23 00000000                 IMPORT           Init_Cible
   24 00000000                 IMPORT           DriverGlobal



ARM Macro Assembler    Page 3 


   25 00000000                 IMPORT           DriverReg
   26 00000000                 IMPORT           DriverPile
   27 00000000                 IMPORT           Tempo
   28 00000000                 IMPORT           Barrette1
   29 00000000                 IMPORT           Barrette2
   30 00000000                 IMPORT           SetSCLK
   31 00000000                 IMPORT           ResetSCLK
   32 00000000                 IMPORT           SetSin
   33 00000000                 IMPORT           ResetSin
   34 00000000         
   35 00000000         
   36 00000000         
   37 00000000                 EXPORT           main
   38 00000000         
   39 00000000         ;*******************************************************
                       ************************
   40 00000000         
   41 00000000         
   42 00000000         ;*******************************************************
                       ************************
   43 00000000                 AREA             mesdonnees, data, readwrite
   44 00000000         
   45 00000000 00000002 
                       M       EQU              2
   46 00000000         
   47 00000000         ;*******************************************************
                       ************************
   48 00000000         
   49 00000000                 AREA             moncode, code, readonly
   50 00000000         
   51 00000000         
   52 00000000         ;*******************************************************
                       ************************
   53 00000000         ; Procédure principale et point d'entrée du projet
   54 00000000         ;*******************************************************
                       ************************
   55 00000000         main    PROC
   56 00000000         ;*******************************************************
                       ************************
   57 00000000         
   58 00000000 F04F 0001       MOV              R0,#1
   59 00000004 F7FF FFFE       BL               Init_Cible
   60 00000008 F04F 0100       MOV              R1, #0
   61 0000000C         
   62 0000000C         
   63 0000000C         Boucle
   64 0000000C         
   65 0000000C         ; on relève la valeur actuelle du capteur 
   66 0000000C         
   67 0000000C 4C11            LDR              R4 ,=GPIOBASEA+OffsetInput ; R4
                                                             --> entrée du capt
                                                            eur
   68 0000000E 8825            LDRH             R5,[R4]     ; R5 --> valeur act
                                                            uelle du capteur
   69 00000010         
   70 00000010 F415 7580       ANDS             R5,#(0x01<<8) ;on compare R5 av
                                                            ec 0x100
   71 00000014 D002            BEQ              Capteur0    ;si ce n'est pas ég
                                                            al, on laisse le R4



ARM Macro Assembler    Page 4 


                                                             à 0
   72 00000016 F04F 0401       MOV              R4,#1       ;sinon on met R4 à 
                                                            1
   73 0000001A E001            B                FinCapteur
   74 0000001C         
   75 0000001C F04F 0400 
                       Capteur0
                               MOV              R4,#0       ;si on est ici alor
                                                            s on avait un 0 au 
                                                            8eme bit (capteur à
                                                             0) donc on affecte
                                                             un 0 à R4 
   76 00000020         
   77 00000020         FinCapteur
   78 00000020         
   79 00000020         ; conditions de la boucle while --> tant que le capteur 
                       = 0 et que on a fait moins de M fois la boucle 
   80 00000020         
   81 00000020 2C01            CMP              R4, #1
   82 00000022 D016            BEQ              FinBoucle   ; si le capteur est
                                                             à 1, on sort
   83 00000024         
   84 00000024 2902            CMP              R1, #M
   85 00000026 D014            BEQ              FinBoucle   ; si on est passé M
                                                             fois dans la boucl
                                                            e, on sort
   86 00000028         
   87 00000028         ; gestion de Barrette 1 et temporisation
   88 00000028         
   89 00000028 480B            LDR              R0, =Barrette1
   90 0000002A B401            PUSH             {R0}        ; on met la valeur 
                                                            de Barrette1 sur la
                                                             pile
   91 0000002C F7FF FFFE       BL               DriverPile
   92 00000030 B001            ADD              SP, #4      ; nettoyage de la p
                                                            ile
   93 00000032         
   94 00000032 F04F 0001       MOV              R0, #1
   95 00000036 F7FF FFFE       BL               Tempo
   96 0000003A         
   97 0000003A         ; gestion de Barrette 2 et temporisation 
   98 0000003A         
   99 0000003A 4808            LDR              R0, =Barrette2
  100 0000003C B401            PUSH             {R0}
  101 0000003E F7FF FFFE       BL               DriverPile
  102 00000042 B001            ADD              SP, #4
  103 00000044         
  104 00000044 F04F 0001       MOV              R0, #1
  105 00000048 F7FF FFFE       BL               Tempo
  106 0000004C         
  107 0000004C         ;incrémentation du compteur 
  108 0000004C F101 0101       ADD              R1, #1
  109 00000050         
  110 00000050 E7DC            B                Boucle
  111 00000052         
  112 00000052         FinBoucle
  113 00000052         
  114 00000052         
  115 00000052                 ENDP



ARM Macro Assembler    Page 5 


  116 00000052         
  117 00000052                 END
              00 00 40010808 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\principale.d -o.\objects\principale.o -I.\RTE\Device\STM
32F103RB -I.\RTE\_Simul_ -IC:\Users\emarina\AppData\Local\Arm\Packs\ARM\CMSIS\5
.6.0\CMSIS\Core\Include -IC:\Users\emarina\AppData\Local\Arm\Packs\Keil\STM32F1
xx_DFP\2.3.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB
 SETA 1" --predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --
predefine="STM32F10X_MD SETA 1" --predefine="STM32F10X_MD SETA 1" --list=.\list
ings\principale.lst Principale.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdonnees 00000000

Symbol: mesdonnees
   Definitions
      At line 43 in file Principale.asm
   Uses
      None
Comment: mesdonnees unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Boucle 0000000C

Symbol: Boucle
   Definitions
      At line 63 in file Principale.asm
   Uses
      At line 110 in file Principale.asm
Comment: Boucle used once
Capteur0 0000001C

Symbol: Capteur0
   Definitions
      At line 75 in file Principale.asm
   Uses
      At line 71 in file Principale.asm
Comment: Capteur0 used once
FinBoucle 00000052

Symbol: FinBoucle
   Definitions
      At line 112 in file Principale.asm
   Uses
      At line 82 in file Principale.asm
      At line 85 in file Principale.asm

FinCapteur 00000020

Symbol: FinCapteur
   Definitions
      At line 77 in file Principale.asm
   Uses
      At line 73 in file Principale.asm
Comment: FinCapteur used once
main 00000000

Symbol: main
   Definitions
      At line 55 in file Principale.asm
   Uses
      At line 37 in file Principale.asm
Comment: main used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 49 in file Principale.asm
   Uses
      None
Comment: moncode unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      At line 67 in file Principale.asm
Comment: GPIOBASEA used once
GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEB unused
M 00000002

Symbol: M
   Definitions
      At line 45 in file Principale.asm
   Uses
      At line 84 in file Principale.asm
Comment: M used once
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080

Symbol: MaskSerial_In1
   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      At line 67 in file Principale.asm
Comment: OffsetInput used once
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetReset unused
OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: OffsetSet unused
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Barrette1 00000000

Symbol: Barrette1
   Definitions
      At line 28 in file Principale.asm
   Uses
      At line 89 in file Principale.asm
Comment: Barrette1 used once
Barrette2 00000000

Symbol: Barrette2
   Definitions
      At line 29 in file Principale.asm
   Uses
      At line 99 in file Principale.asm
Comment: Barrette2 used once
DriverGlobal 00000000

Symbol: DriverGlobal
   Definitions
      At line 24 in file Principale.asm
   Uses
      None
Comment: DriverGlobal unused
DriverPile 00000000

Symbol: DriverPile
   Definitions
      At line 26 in file Principale.asm
   Uses
      At line 91 in file Principale.asm
      At line 101 in file Principale.asm

DriverReg 00000000

Symbol: DriverReg
   Definitions
      At line 25 in file Principale.asm
   Uses
      None
Comment: DriverReg unused
Init_Cible 00000000

Symbol: Init_Cible
   Definitions
      At line 23 in file Principale.asm
   Uses
      At line 59 in file Principale.asm
Comment: Init_Cible used once
ResetSCLK 00000000

Symbol: ResetSCLK
   Definitions
      At line 31 in file Principale.asm
   Uses
      None
Comment: ResetSCLK unused
ResetSin 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: ResetSin
   Definitions
      At line 33 in file Principale.asm
   Uses
      None
Comment: ResetSin unused
SetSCLK 00000000

Symbol: SetSCLK
   Definitions
      At line 30 in file Principale.asm
   Uses
      None
Comment: SetSCLK unused
SetSin 00000000

Symbol: SetSin
   Definitions
      At line 32 in file Principale.asm
   Uses
      None
Comment: SetSin unused
Tempo 00000000

Symbol: Tempo
   Definitions
      At line 27 in file Principale.asm
   Uses
      At line 95 in file Principale.asm
      At line 105 in file Principale.asm

|Lib$$Request$$armlib| 00000000

Symbol: |Lib$$Request$$armlib|
   Definitions
      At line 16 in file Principale.asm
   Uses
      None
Comment: |Lib$$Request$$armlib| unused
12 symbols
376 symbols in table
